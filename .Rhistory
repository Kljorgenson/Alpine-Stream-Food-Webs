geom_text(aes(label = "Biofilm", x = 0.54, y = 0.12 ), cex = 4) +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name = "Hydrologic source") +#labs(legend = NULL) + geom_text(aes(label = site), nudge_y = -0.02, nudge_x = 0.05)
xlim(-0.6, 0.7)
p2
# Plot diet PCA
p2 <- autoplot(PCA_s, data = diet_dat, colour = 'Primary_Water_Source', label = FALSE, loadings = TRUE, loadings.label = FALSE, loadings.colour = 1, size = 5) +
theme_classic() +
geom_text(aes(label = "Hydrurus", x = -0.5, y = 0.27 ), cex = 4, fontface = "italic") +
geom_text(aes(label = "CPOM", x = -0.1, y = -0.58 ) , cex = 4) +
geom_text(aes(label = "Biofilm", x = 0.54, y = 0.12 ), cex = 4) +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name = "Hydrologic source") +#labs(legend = NULL) + geom_text(aes(label = site), nudge_y = -0.02, nudge_x = 0.05)
xlim(-0.6, 0.7)
p2
ggsave("Output/Paper figures/PCA_s.png", width = 3, height = 2)
# Plot diet PCA
p2 <- autoplot(PCA_s, data = diet_dat, colour = 'Primary_Water_Source', label = FALSE, loadings = TRUE, loadings.label = FALSE, loadings.colour = 1, size = 5) +
theme_classic() +
geom_text(aes(label = "Hydrurus", x = -0.5, y = 0.27 ), cex = 4, fontface = "italic") +
geom_text(aes(label = "CPOM", x = -0.1, y = -0.58 ) , cex = 4) +
geom_text(aes(label = "Biofilm", x = 0.54, y = 0.12 ), cex = 4) +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name = "Hydrologic source") +#labs(legend = NULL) + geom_text(aes(label = site), nudge_y = -0.02, nudge_x = 0.05)
xlim(-0.6, 0.7) + theme(legend.position = "bottom")
p2
# Plot diet PCA
p2 <- autoplot(PCA_s, data = diet_dat, colour = 'Primary_Water_Source', label = FALSE, loadings = TRUE, loadings.label = FALSE, loadings.colour = 1, size = 5) +
theme_classic() +
geom_text(aes(label = "Hydrurus", x = -0.5, y = 0.27 ), cex = 4, fontface = "italic") +
geom_text(aes(label = "CPOM", x = -0.1, y = -0.58 ) , cex = 4) +
geom_text(aes(label = "Biofilm", x = 0.54, y = 0.12 ), cex = 4) +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name = "Hydrologic source") +#labs(legend = NULL) + geom_text(aes(label = site), nudge_y = -0.02, nudge_x = 0.05)
xlim(-0.6, 0.7)
p2
# Setup
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(compositions)
library(ggtern)
library(mvnormtest)
# Setup
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(compositions)
library(ggtern)
library(mvnormtest)
## organize data
Envi_data <- read.csv("Output//Envi_data.csv")
diet_data <- read.csv("Output//diet_data_clean.csv")
diet_means_data <- diet_data %>% group_by(site, source) %>% summarise(Mean = mean(Mean, na.rm = TRUE,
SD = sd(Mean, na.rm = TRUE)))
diet_means_data
# Spread resource data into seperate columns
spread_dat <- diet_data %>% select(site, taxa, source, Mean) %>% spread(key = source, value = Mean)
spread_dat_2 <- diet_data %>% select(site, taxa, source, SD) %>% spread(key = source, value = SD)
## organize data
Envi_data <- read.csv("Output//Envi_data.csv")
diet_data <- read.csv("Output//diet_data_clean.csv")
diet_means_data <- diet_data %>% group_by(site, source) %>% dplyr::summarise(Mean = mean(Mean, na.rm = TRUE,
SD = sd(Mean, na.rm = TRUE)))
diet_means_data
# Spread resource data into seperate columns
spread_dat <- diet_data %>% select(site, taxa, source, Mean) %>% spread(key = source, value = Mean)
spread_dat_2 <- diet_data %>% select(site, taxa, source, SD) %>% spread(key = source, value = SD)
names(spread_dat_2) <- c("site", "taxa", "Biofilm_SD", "CPOM_SD", "Hydrurus_SD")
spread_dat$Hydrurus[is.na(spread_dat$Hydrurus)] <- 0
Spread_dat <- merge(spread_dat, spread_dat_2, by = c("site", "taxa"))
# Set SD for zero Hydrurus to max SD for Hydrurus
Spread_dat$Hydrurus_SD[is.na(Spread_dat$Hydrurus_SD)] <- mean(spread_dat_2$Hydrurus_SD, na.rm = TRUE)
# Merge with environmental data
spread_env_dat <- merge(Spread_dat, Envi_data)
names(spread_env_dat)
### Explore variation in compositions
# Create acomp object to use function for metric variation from 'compositions' package
xc = acomp(spread_env_dat[, c("Biofilm","CPOM", "Hydrurus")])
summary(xc)
spread_env_dat$comp <- xc
## within-site variation
# Calculate within-site variation for each site
site <- unique(spread_env_dat$site)
y  <- NULL
for(i in site){
s<- spread_env_dat %>% filter(site == i) %>% select(comp)
temp <- data.frame(site = i, var = mvar(s))
y <- rbind(y, temp)
}
site_var <- y
site_var
mean(site_var$var) # mean within site variation
summary(lm(site_var$var~Envi_data$H)) # site var does not increase with diversity
summary(lm(site_var$var~Envi_data$D))
# Mean within site variation by stream type
mean(site_var$var[c(1,9)]) # Subterranean ice
mean(site_var$var[c(2,3,8)]) # Glacier
mean(site_var$var[c(4,5,6,7)]) # Snowmelt
# ANOVA to test differences in within-site variation among stream types
site_var$W_source <- c("Subterranean ice", "Glacier", "Glacier", "Snowmelt","Snowmelt", "Snowmelt", "Snowmelt", "Glacier", "Subterranean ice")
summary(aov1 <- aov(var ~ W_source, data = site_var))
## Among-site variation using site means
# Calculate site diet porportion means
site_means <- spread_env_dat %>% group_by(site) %>% summarise(Biofilm = mean(Biofilm), CPOM = mean(CPOM), Hydrurus = mean(Hydrurus), Primary_water_source = unique(Primary_water_source))
site_means
## Among-site variation using site means
# Calculate site diet porportion means
site_means <- spread_env_dat %>% group_by(site) %>% dplyr::summarise(Biofilm = mean(Biofilm), CPOM = mean(CPOM), Hydrurus = mean(Hydrurus), Primary_water_source = unique(Primary_water_source))
site_means
# Among-site variation
among_var <- mvar(site_means[,2:4])
among_var
# Among-site variation by stream type
mvar(site_means[c(1,9),2:4]) # Subterranean ice
mvar(site_means[c(2,3,8),2:4]) # Glacier
mvar(site_means[c(4,5,6,7),2:4]) # Snowmelt
# Among-site variation for taxa at >= 3 sites
spread_env_dat %>% group_by(taxa) %>% summarise(n = length(taxa))
taxa <- c("Allomyia", "Ameletidae", "Baetidae", "Homophylax", "Lednia", "Midges", "Simuliidae", "Zapada")
y2  <- NULL
for(i in taxa){
t<- spread_env_dat %>% filter(taxa == i) %>% select(comp)
temp <- data.frame(taxa = i,var = mvar(t))
y2 <- rbind(y2, temp)
}
y2
## Plots to display variation
# Ternary plot grouped by taxa
spread_env_dat$Hydrurus[spread_dat$Hydrurus < .01] <- 0.01 # Make Hydrurus more easily visualized
cols <- brewer.pal(7, "Dark2")
t1 <- spread_env_dat %>% filter(taxa %in% c("Allomyia", "Homophylax", "Lednia", "Midges", "Simuliidae", "Tipula", "Zapada")) %>%
ggtern(aes(Biofilm, CPOM, Hydrurus, fill = taxa)) + geom_point(cex = 4, shape = 21) +
theme_bw() + theme(legend.position= c(0.2,.7)) +
scale_fill_manual(values = cols, name = "Taxa")
t1
w_source_means <- spread_env_mean_dat %>% group_by(Primary_water_source) %>% summarise(Biofilm = mean(Biofilm),
CPOM = mean(CPOM),
Hydrurus = mean(Hydrurus))
t1 <- spread_env_dat %>%
ggtern(aes(Biofilm, CPOM, Hydrurus)) + geom_point(aes(shape = site, color = Primary_water_source), stroke = 1.5) +
scale_shape_manual(values=1:10) + guides(shape = FALSE) + theme_bw() +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name="Hydrologic Source") +
theme(legend.position= c(.85,.83)) +
geom_point(data = w_source_means, aes(Biofilm, CPOM, Hydrurus, fill = Primary_water_source), pch = 21, cex = 7, show.legend = FALSE) +
scale_fill_manual(values = c("#2171b5", "#9ecae1", "#08306b"))
t1
spread_env_dat %>%
ggtern(aes(Biofilm, CPOM, Hydrurus))
require(devtools)
install_version("ggplot2", version = "3.4.4", repos = "http://cran.us.r-project.org")
require(devtools)
install_version("ggplot2", version = "3.4.4", repos = "http://cran.us.r-project.org")
library(plyr)
library(dplyr)
library(ggplot2)
t1 <- spread_env_dat %>%
ggtern(aes(Biofilm, CPOM, Hydrurus)) + geom_point(aes(shape = site, color = Primary_water_source), stroke = 1.5) +
scale_shape_manual(values=1:10) + guides(shape = FALSE) + theme_bw() +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name="Hydrologic Source") +
theme(legend.position= c(.85,.83)) +
geom_point(data = w_source_means, aes(Biofilm, CPOM, Hydrurus, fill = Primary_water_source), pch = 21, cex = 7, show.legend = FALSE) +
scale_fill_manual(values = c("#2171b5", "#9ecae1", "#08306b"))
library(ggtern)
# Setup
library(plyr)
library(dplyr)
library(tidyr)
library(tidyr)
library(compositions)
library(ggtern)
library(mvnormtest)
library(ggplot2)
## Plots to display variation
# Ternary plot grouped by taxa
spread_env_dat$Hydrurus[spread_dat$Hydrurus < .01] <- 0.01 # Make Hydrurus more easily visualized
cols <- brewer.pal(7, "Dark2")
t1 <- spread_env_dat %>% filter(taxa %in% c("Allomyia", "Homophylax", "Lednia", "Midges", "Simuliidae", "Tipula", "Zapada")) %>%
ggtern(aes(Biofilm, CPOM, Hydrurus, fill = taxa)) + geom_point(cex = 4, shape = 21) +
theme_bw() + theme(legend.position= c(0.2,.7)) +
scale_fill_manual(values = cols, name = "Taxa")
t1
## Plots to display variation
# Ternary plot grouped by taxa
spread_env_dat$Hydrurus[spread_dat$Hydrurus < .01] <- 0.01 # Make Hydrurus more easily visualized
cols <- brewer.pal(7, "Dark2")
t1 <- spread_env_dat %>% filter(taxa %in% c("Allomyia", "Homophylax", "Lednia", "Midges", "Simuliidae", "Tipula", "Zapada")) %>%
ggtern(aes(Biofilm, CPOM, Hydrurus, fill = taxa)) + geom_point(cex = 4, shape = 21) +
theme_bw() + theme(legend.position= c(0.2,.7)) +
scale_fill_manual(values = cols, name = "Taxa")
t1
w_source_means <- spread_env_mean_dat %>% group_by(Primary_water_source) %>% summarise(Biofilm = mean(Biofilm),
CPOM = mean(CPOM),
Hydrurus = mean(Hydrurus))
t1 <- spread_env_dat %>%
ggtern(aes(Biofilm, CPOM, Hydrurus)) + geom_point(aes(shape = site, color = Primary_water_source), stroke = 1.5) +
scale_shape_manual(values=1:10) + guides(shape = FALSE) + theme_bw() +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name="Hydrologic Source") +
theme(legend.position= c(.85,.83)) +
geom_point(data = w_source_means, aes(Biofilm, CPOM, Hydrurus, fill = Primary_water_source), pch = 21, cex = 7, show.legend = FALSE) +
scale_fill_manual(values = c("#2171b5", "#9ecae1", "#08306b"))
t1
w_source_means <- spread_env_mean_dat %>% group_by(Primary_water_source) %>% summarise(Biofilm = mean(Biofilm),
CPOM = mean(CPOM),
Hydrurus = mean(Hydrurus))
w_source_means <- spread_env_m_dat %>% group_by(Primary_water_source) %>% summarise(Biofilm = mean(Biofilm),
CPOM = mean(CPOM),
Hydrurus = mean(Hydrurus))
t1 <- spread_env_dat %>%
ggtern(aes(Biofilm, CPOM, Hydrurus)) + geom_point(aes(shape = site, color = Primary_water_source), stroke = 1.5) +
scale_shape_manual(values=1:10) + guides(shape = FALSE) + theme_bw() +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name="Hydrologic Source") +
theme(legend.position= c(.85,.83)) +
geom_point(data = w_source_means, aes(Biofilm, CPOM, Hydrurus, fill = Primary_water_source), pch = 21, cex = 7, show.legend = FALSE) +
scale_fill_manual(values = c("#2171b5", "#9ecae1", "#08306b"))
t1
t1 <- spread_env_dat %>%
ggtern(aes(Biofilm, CPOM, Hydrurus)) + geom_point(aes(shape = site, color = Primary_water_source), stroke = 1.5) +
scale_shape_manual(values=1:10) + guides(shape = FALSE) + theme_bw() +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name="Hydrologic Source") +
theme(legend.position= c(.85,.83)) +
geom_point(data = w_source_means, aes(Biofilm, CPOM, Hydrurus, fill = Primary_water_source), pch = 21, cex = 7, show.legend = FALSE) +
scale_fill_manual(values = c("#2171b5", "#9ecae1", "#08306b")) + labs(x = "H")
t1
t1 <- spread_env_dat %>%
ggtern(aes(Biofilm, CPOM, Hydrurus)) + geom_point(aes(shape = site, color = Primary_water_source), stroke = 1.5) +
scale_shape_manual(values=1:10) + guides(shape = FALSE) + theme_bw() +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name="Hydrologic Source") +
theme(legend.position= c(.85,.83)) +
geom_point(data = w_source_means, aes(Biofilm, CPOM, Hydrurus, fill = Primary_water_source), pch = 21, cex = 7, show.legend = FALSE) +
scale_fill_manual(values = c("#2171b5", "#9ecae1", "#08306b")) + labs(y = "H")
t1
t1 <- spread_env_dat %>%
ggtern(aes(Biofilm, CPOM, Hydrurus)) + geom_point(aes(shape = site, color = Primary_water_source), stroke = 1.5) +
scale_shape_manual(values=1:10) + guides(shape = FALSE) + theme_bw() +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name="Hydrologic Source") +
theme(legend.position= c(.85,.83)) +
geom_point(data = w_source_means, aes(Biofilm, CPOM, Hydrurus, fill = Primary_water_source), pch = 21, cex = 7, show.legend = FALSE) +
scale_fill_manual(values = c("#2171b5", "#9ecae1", "#08306b")) + labs(z = "H")
t1
t1 <- spread_env_dat %>%
ggtern(aes(Biofilm, CPOM, Hydrurus)) + geom_point(aes(shape = site, color = Primary_water_source), stroke = 1.5) +
scale_shape_manual(values=1:10) + guides(shape = FALSE) + theme_bw() +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name="Hydrologic Source") +
theme(legend.position= c(.85,.83)) +
geom_point(data = w_source_means, aes(Biofilm, CPOM, Hydrurus, fill = Primary_water_source), pch = 21, cex = 7, show.legend = FALSE) +
scale_fill_manual(values = c("#2171b5", "#9ecae1", "#08306b")) + labs(z = expression(italic("Hydrurus")))
t1
ggsave("Output//Paper figures//taxa diet tern WS.png", width = 6, height = 6)
ggsave("Output//Paper figures//taxa diet tern WS.png", width = 6, height = 6, res=400)
ggsave("Output//Paper figures//taxa diet tern WS.png", width = 6, height = 6, dpi=400)
t1
ggsave("Output//Paper figures//taxa diet tern WS.png", width = 6, height = 6, dpi=400)
# Plot diet PCA
p2 <- autoplot(PCA_s, data = diet_dat, colour = 'Primary_Water_Source', label = FALSE, loadings = TRUE, loadings.label = FALSE, loadings.colour = 1, size = 5) +
theme_classic() +
geom_text(aes(label = "Hydrurus", x = -0.5, y = 0.27 ), cex = 4, fontface = "italic") +
geom_text(aes(label = "CPOM", x = -0.1, y = -0.58 ) , cex = 4) +
geom_text(aes(label = "Biofilm", x = 0.54, y = 0.12 ), cex = 4) +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name = "Hydrologic source") +#labs(legend = NULL) + geom_text(aes(label = site), nudge_y = -0.02, nudge_x = 0.05)
xlim(-0.6, 0.7)
p2
ggsave("Output/Paper figures/PCA_s.png", width = 2, height = 2, dpi=400)
ggsave("Output/Paper figures/PCA_s.png", width = 2.3 height = 2, dpi=400)
ggsave("Output/Paper figures/PCA_s.png", width = 2.3, height = 2, dpi=400)
# Plot diet PCA
p2 <- autoplot(PCA_s, data = diet_dat, colour = 'Primary_Water_Source', label = FALSE, loadings = TRUE, loadings.label = FALSE, loadings.colour = 1, size = 5) +
theme_classic() +
geom_text(aes(label = "Hydrurus", x = -0.5, y = 0.27 ), cex = 4, fontface = "italic") +
geom_text(aes(label = "CPOM", x = -0.1, y = -0.58 ) , cex = 4) +
geom_text(aes(label = "Biofilm", x = 0.54, y = 0.12 ), cex = 4) +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name = "Hydrologic source") +#labs(legend = NULL) + geom_text(aes(label = site), nudge_y = -0.02, nudge_x = 0.05)
xlim(-0.6, 0.7) + theme(legend.position = "bottom")
p2
ggsave("Output/Paper figures/legent.png", width = 4, height = 2, dpi=400)
ggsave("Output/Paper figures/legent.png", width = 4, height = 4, dpi=400)
ggsave("Output/Paper figures/legent.png", width = 6, height = 4, dpi=400)
## Plot
# Create ggplot
p_wrap <- data_diet %>% ggplot(aes(Mean, reorder(taxa, desc(taxa)), color = source)) + geom_point() +
facet_wrap(~ site, labeller = labeller(site = site_labs)) + geom_errorbar(aes(xmin=Mean-SD, xmax=Mean+SD), width=1) +
scale_color_manual(name = "Resource", labels = c("Biofilm", "CPOM", expression(italic("Hydrurus"))), values = c("#1B9E77", "#D95F02", "#7570B3", "#66A61E", "#E6AB02", "#A6761D")) +
xlab("Diet Proportion") + ylab("Taxon") + theme_bw() + theme(strip.text = element_text(color = 'white'), axis.text=element_text(size=8))
p_wrap
# Color facet labels by water source
pdf("Output//Paper figures//Diet props all.pdf", width = 7, height = 7.2, dpi=400)
?pdf
# Color facet labels by water source
pdf("Output//Paper figures//Diet props all.pdf", width = 7, height = 7.2, res=400)
# Color facet labels by water source
png("Output//Paper figures//Diet props all.png", width = 7, height = 7.2, res=600)
# Color facet labels by water source
png("Output//Paper figures//Diet props all.png", width = 7, height = 7.2, dpi = 500)
# Color facet labels by water source
png("Output//Paper figures//Diet props all.png", width = 7, height = 7.2, res = 500)
g <- ggplot_gtable(ggplot_build(p_wrap))
stripr <- which(grepl('strip-t', g$layout$name))
fills <- c("#6baed6", "#6baed6", "#6baed6", "#08306b", "#08306b", "#6baed6", "#2171b5","#2171b5","#2171b5")
k <- 1
for (i in stripr) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
grid.draw(g)
library(grid)
grid.draw(g)
dev.off()
# Color facet labels by water source
png("Output//Paper figures//Diet props all.png", width = 700, height = 7200, res = 500)
g <- ggplot_gtable(ggplot_build(p_wrap))
stripr <- which(grepl('strip-t', g$layout$name))
fills <- c("#6baed6", "#6baed6", "#6baed6", "#08306b", "#08306b", "#6baed6", "#2171b5","#2171b5","#2171b5")
k <- 1
for (i in stripr) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
dev.off()
# Color facet labels by water source
png("Output//Paper figures//Diet props all.png", width = 2000, height = 7000, res = 500)
g <- ggplot_gtable(ggplot_build(p_wrap))
stripr <- which(grepl('strip-t', g$layout$name))
fills <- c("#6baed6", "#6baed6", "#6baed6", "#08306b", "#08306b", "#6baed6", "#2171b5","#2171b5","#2171b5")
k <- 1
for (i in stripr) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
dev.off()
# Color facet labels by water source
png("Output//Paper figures//Diet props all.png", width = 3000, height = 6000, res = 500)
g <- ggplot_gtable(ggplot_build(p_wrap))
stripr <- which(grepl('strip-t', g$layout$name))
fills <- c("#6baed6", "#6baed6", "#6baed6", "#08306b", "#08306b", "#6baed6", "#2171b5","#2171b5","#2171b5")
k <- 1
for (i in stripr) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
dev.off()
# Color facet labels by water source
png("Output//Paper figures//Diet props all.png", width = 4000, height = 5000, res = 500)
g <- ggplot_gtable(ggplot_build(p_wrap))
stripr <- which(grepl('strip-t', g$layout$name))
fills <- c("#6baed6", "#6baed6", "#6baed6", "#08306b", "#08306b", "#6baed6", "#2171b5","#2171b5","#2171b5")
k <- 1
for (i in stripr) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
dev.off()
# Color facet labels by water source
png("Output//Paper figures//Diet props all.png", width = 4000, height = 4000, res = 500)
g <- ggplot_gtable(ggplot_build(p_wrap))
stripr <- which(grepl('strip-t', g$layout$name))
fills <- c("#6baed6", "#6baed6", "#6baed6", "#08306b", "#08306b", "#6baed6", "#2171b5","#2171b5","#2171b5")
k <- 1
for (i in stripr) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
dev.off()
# Color facet labels by water source
png("Output//Paper figures//Diet props all.png", width = 3000, height = 4000, res = 500)
g <- ggplot_gtable(ggplot_build(p_wrap))
stripr <- which(grepl('strip-t', g$layout$name))
fills <- c("#6baed6", "#6baed6", "#6baed6", "#08306b", "#08306b", "#6baed6", "#2171b5","#2171b5","#2171b5")
k <- 1
for (i in stripr) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
dev.off()
# Color facet labels by water source
png("Output//Paper figures//Diet props all.png", width = 3200, height = 4000, res = 500)
g <- ggplot_gtable(ggplot_build(p_wrap))
stripr <- which(grepl('strip-t', g$layout$name))
fills <- c("#6baed6", "#6baed6", "#6baed6", "#08306b", "#08306b", "#6baed6", "#2171b5","#2171b5","#2171b5")
k <- 1
for (i in stripr) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
dev.off()
# Color facet labels by water source
png("Output//Paper figures//Diet props all.png", width = 3200, height = 4000, res = 600)
g <- ggplot_gtable(ggplot_build(p_wrap))
stripr <- which(grepl('strip-t', g$layout$name))
fills <- c("#6baed6", "#6baed6", "#6baed6", "#08306b", "#08306b", "#6baed6", "#2171b5","#2171b5","#2171b5")
k <- 1
for (i in stripr) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
dev.off()
# Color facet labels by water source
png("Output//Paper figures//Diet props all.png", width = 3500, height = 4000, res = 600)
g <- ggplot_gtable(ggplot_build(p_wrap))
stripr <- which(grepl('strip-t', g$layout$name))
fills <- c("#6baed6", "#6baed6", "#6baed6", "#08306b", "#08306b", "#6baed6", "#2171b5","#2171b5","#2171b5")
k <- 1
for (i in stripr) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
dev.off()
# Color facet labels by water source
png("Output//Paper figures//Diet props all.png", width = 3700, height = 4000, res = 600)
g <- ggplot_gtable(ggplot_build(p_wrap))
stripr <- which(grepl('strip-t', g$layout$name))
fills <- c("#6baed6", "#6baed6", "#6baed6", "#08306b", "#08306b", "#6baed6", "#2171b5","#2171b5","#2171b5")
k <- 1
for (i in stripr) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
dev.off()
# Environmental PCA plot
p1 <- autoplot(PCA_1, data = PCA_d, colour = 'Primary_water_source', loadings = TRUE, loadings.label = FALSE, loadings.colour = 1, size = 5) +
theme_classic() + labs(colour = "Hydrologic source") + xlim(-0.6,0.7) +
geom_text(aes(label = "Tmean", x = -0.5, y = -0.07 ), cex = 4) +
geom_text(aes(label = "Tmax", x = -0.5, y = -0.02 ), cex = 4) +
geom_text(aes(label = "TSS", x = -0.3, y = 0.06 ) , cex = 4) +
geom_text(aes(label = "pH", x = 0.24, y = 0.5 ), cex = 4) +
geom_text(aes(label = "Nitrate", x = 0.45, y = 0.2 ), cex = 4) +
geom_text(aes(label = "DO", x = 0.47, y = 0.02 ), cex = 4) +
geom_text(aes(label = "Chloride", x = 0.38, y = -0.28 ), cex = 4) +
geom_text(aes(label = "SPC", x = 0.23, y = -0.54 ), cex = 4) +
geom_text(aes(label = "Sulfate", x = 0.07, y = -0.48 ), cex = 4) +
geom_text(aes(label = "Fluoride", x = -0.15, y = -0.43 ), cex = 4) +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b")) +
scale_size_manual(values = 8)
p1
ggsave("Output/Paper figures/Diet PCA.pdf", width = 6, height = 4, dpi=400)
ggsave("Output/Paper figures/Diet PCA.pdf", width = 4, height = 3, dpi=400)
ggsave("Output/Paper figures/Diet PCA.png", width = 6, height = 4, dpi=400)
# Environmental PCA plot
p1 <- autoplot(PCA_1, data = PCA_d, colour = 'Primary_water_source', loadings = TRUE, loadings.label = FALSE, loadings.colour = 1, size = 5) +
theme_classic() + labs(colour = "Hydrologic source") + xlim(-0.6,0.5) +
geom_text(aes(label = "Tmean", x = -0.5, y = -0.07 ), cex = 4) +
geom_text(aes(label = "Tmax", x = -0.5, y = -0.02 ), cex = 4) +
geom_text(aes(label = "TSS", x = -0.3, y = 0.06 ) , cex = 4) +
geom_text(aes(label = "pH", x = 0.24, y = 0.5 ), cex = 4) +
geom_text(aes(label = "Nitrate", x = 0.45, y = 0.2 ), cex = 4) +
geom_text(aes(label = "DO", x = 0.47, y = 0.02 ), cex = 4) +
geom_text(aes(label = "Chloride", x = 0.38, y = -0.28 ), cex = 4) +
geom_text(aes(label = "SPC", x = 0.23, y = -0.54 ), cex = 4) +
geom_text(aes(label = "Sulfate", x = 0.07, y = -0.48 ), cex = 4) +
geom_text(aes(label = "Fluoride", x = -0.15, y = -0.43 ), cex = 4) +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b")) +
scale_size_manual(values = 8)
p1
# Environmental PCA plot
p1 <- autoplot(PCA_1, data = PCA_d, colour = 'Primary_water_source', loadings = TRUE, loadings.label = FALSE, loadings.colour = 1, size = 5) +
theme_classic() + labs(colour = "Hydrologic source") + xlim(-0.6,0.6) +
geom_text(aes(label = "Tmean", x = -0.5, y = -0.07 ), cex = 4) +
geom_text(aes(label = "Tmax", x = -0.5, y = -0.02 ), cex = 4) +
geom_text(aes(label = "TSS", x = -0.3, y = 0.06 ) , cex = 4) +
geom_text(aes(label = "pH", x = 0.24, y = 0.5 ), cex = 4) +
geom_text(aes(label = "Nitrate", x = 0.45, y = 0.2 ), cex = 4) +
geom_text(aes(label = "DO", x = 0.47, y = 0.02 ), cex = 4) +
geom_text(aes(label = "Chloride", x = 0.38, y = -0.28 ), cex = 4) +
geom_text(aes(label = "SPC", x = 0.23, y = -0.54 ), cex = 4) +
geom_text(aes(label = "Sulfate", x = 0.07, y = -0.48 ), cex = 4) +
geom_text(aes(label = "Fluoride", x = -0.15, y = -0.43 ), cex = 4) +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b")) +
scale_size_manual(values = 8)
p1
# Environmental PCA plot
p1 <- autoplot(PCA_1, data = PCA_d, colour = 'Primary_water_source', loadings = TRUE, loadings.label = FALSE, loadings.colour = 1, size = 5) +
theme_classic() + labs(colour = "Hydrologic source") + xlim(-0.6,0.5) +
geom_text(aes(label = "Tmean", x = -0.5, y = -0.07 ), cex = 4) +
geom_text(aes(label = "Tmax", x = -0.5, y = -0.02 ), cex = 4) +
geom_text(aes(label = "TSS", x = -0.3, y = 0.06 ) , cex = 4) +
geom_text(aes(label = "pH", x = 0.24, y = 0.5 ), cex = 4) +
geom_text(aes(label = "Nitrate", x = 0.45, y = 0.2 ), cex = 4) +
geom_text(aes(label = "DO", x = 0.47, y = 0.02 ), cex = 4) +
geom_text(aes(label = "Chloride", x = 0.38, y = -0.28 ), cex = 4) +
geom_text(aes(label = "SPC", x = 0.23, y = -0.54 ), cex = 4) +
geom_text(aes(label = "Sulfate", x = 0.07, y = -0.48 ), cex = 4) +
geom_text(aes(label = "Fluoride", x = -0.15, y = -0.43 ), cex = 4) +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b")) +
scale_size_manual(values = 8)
p1
ggsave("Output/Paper figures/Diet PCA.png", width = 6, height = 4, dpi=400)
ggsave("Output/Paper figures/Diet PCA.png", width = 5.8, height = 4, dpi=400)
dev.off
