env_dat_long$env_var <- as.factor(env_dat_long$env_var)
env_dat_long$value <- as.numeric(env_dat_long$value)
levels(env_dat_long$env_var)
# Facet plot with 6 models
env_var_labs <- c("pH","Tmax (\u00B0C)","Aspect","SPC", "Elevation (m)", "PC1") # Set labels for facets
names(env_var_labs) <- c("pH","Tmax", "aspect","SPC", "Elevation", "PCA1")
env_dat_long$env_var <- factor(env_dat_long$env_var,      # Reorder factor levels
levels = c("pH", "Tmax", "aspect", "SPC", "Elevation", "PCA1"))
p <- ggplot(data = env_dat_long, aes(value, Mean, color = source)) +
geom_point() + facet_wrap(~env_var, scales = "free_x", labeller = labeller(env_var = env_var_labs)) +
geom_line(data = pred_dat, aes(x, pred, color = source, linetype = sig), size = 1) +
scale_color_brewer("Resource", palette = "Dark2") + theme_bw() + ylab("Diet Proportion") +
scale_linetype_manual(values=c("dashed", "solid"), guide = "none") + xlab(NULL) # Make lines dashed for non-significant relationships
p
ggsave("Output//Paper figures//Dirichlet envi facet.png", width = 7, height = 4)
## Taxa specific models
n <- spread %>% group_by(taxa) %>% summarise(n = length(taxa))
n
# Make all proportions sum to 1
spread_2 <- spread %>% group_by(site, taxa) %>% mutate(Biofilm = round(Biofilm/(Biofilm+CPOM+Hydrurus),2),
CPOM = round(CPOM/(Biofilm+CPOM+Hydrurus),2),
Hydrurus = round(Hydrurus/(Biofilm+CPOM+Hydrurus),2))
# Plot fitted residuals for 3 models
png("Output//Paper figures//Fitted residuals.png", width = 10, height = 6, units = "in", res = 1200)
par(mfrow= c(3,5), mar = c(4, 4, 2, 0.2))
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.6, y = 0.5, paste("Tmax"), cex = 1.25, lwd = 0.5)
plot(fitted(m2.5c)[, 1], residuals(m2.5c, "standardized")[, 1], pch = 21,
ylim = c(-4, 4), main = "Biofilm", xlab = "", ylab = "",
cex = 1, lwd = 1)
abline(h = 0, lty = 2)
plot(fitted(m2.5c)[, 2], residuals(m2.5c, "standardized")[, 2], pch = 21,
ylim = c(-4, 4), main = "CPOM", xlab = "", ylab = "",
cex = 1, lwd = 1)
abline(h = 0, lty = 2)
plot(fitted(m2.5c)[, 3], residuals(m2.5c, "standardized")[, 3], pch = 21,
ylim = c(-4, 4), main = "Hydrurus", xlab = "", ylab = "",
cex = 1, lwd = 1)
abline(h = 0, lty = 2)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.6, y = 0.5, paste("SPC"), cex = 1.25, lwd = 0.5)
plot(fitted(m1c)[, 1], residuals(m1c, "standardized")[, 1], pch = 21,
ylim = c(-4, 4), xlab = "", ylab = "Standardized Residuals",
cex = 1, lwd = 1)
abline(h = 0, lty = 2)
plot(fitted(m1c)[, 2], residuals(m1c, "standardized")[, 2], pch = 21,
ylim = c(-4, 4), xlab = "", ylab = "",
cex = 1, lwd = 1)
abline(h = 0, lty = 2)
plot(fitted(m1c)[, 3], residuals(m1c, "standardized")[, 3], pch = 21,
ylim = c(-4, 4), xlab = "", ylab = "",
cex = 1, lwd = 1)
abline(h = 0, lty = 2)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.6, y = 0.6, paste("Hydrologic"), cex = 1.25, lwd = 0.5)
text(x = 0.6, y = 0.4, paste("source"), cex = 1.25, lwd = 0.5)
plot(fitted(m6c)[, 1], residuals(m6c, "standardized")[, 1], pch = 21,
ylim = c(-5, 5), xlab = "", ylab = "",
cex = 1, lwd = 1)
abline(h = 0, lty = 2)
plot(fitted(m6c)[, 2], residuals(m6c, "standardized")[, 2], pch = 21,
ylim = c(-5, 5), xlab = "Fitted Values", ylab = "",
cex = 1, lwd = 1)
abline(h = 0, lty = 2)
plot(fitted(m6c)[, 3], residuals(m6c, "standardized")[, 3], pch = 21,
ylim = c(-5, 5), xlab = "", ylab = "",
cex = 1, lwd = 1)
abline(h = 0, lty = 2)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
dev.off()
png("Output//Paper figures//QQ plot.png", width = 10, height = 6, units = "in", res = 1200)
par(mfrow= c(3,5), mar = c(4, 4, 2, 0.2))
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.6, y = 0.5, paste("Tmax"), cex = 1.25, lwd = 0.5)
qqnorm(residuals(m2.5c, "standardized")[, 1], xlim = c(4,-4), ylim = c(4,-4),
main = "Biofilm",cex = 1, lwd = 1, xlab = "", ylab = "")
abline(0, 1, lwd = 1)
qqnorm(residuals(m2.5c, "standardized")[, 2], xlim = c(4,-4), ylim = c(4,-4),
main = "CPOM",cex = 1, lwd = 1, xlab = "", ylab = "")
abline(0, 1, lwd = 1)
qqnorm(residuals(m2.5c, "standardized")[, 3], xlim = c(4,-4), ylim = c(4,-4),
main = "Hydrurus", cex = 1, lwd = 1, xlab = "", ylab = "")
abline(0, 1, lwd = 1)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.6, y = 0.5, paste("SPC"), cex = 1.25, lwd = 0.5)
qqnorm(residuals(m1c, "standardized")[, 1], xlim = c(3,-3), ylim = c(3,-3),
main = NULL, cex = 1, lwd = 1, xlab = "")
abline(0, 1, lwd = 1)
qqnorm(residuals(m1c, "standardized")[, 2], xlim = c(3,-3), ylim = c(3,-3),
main = NULL, cex = 1, lwd = 1, xlab = "", ylab = "")
abline(0, 1, lwd = 1)
qqnorm(residuals(m1c, "standardized")[, 3], xlim = c(3,-3), ylim = c(3,-3),
main = NULL, cex = 1, lwd = 1, xlab = "", ylab = "")
abline(0, 1, lwd = 1)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.6, y = 0.6, paste("Hydrologic"), cex = 1.25, lwd = 0.5)
text(x = 0.6, y = 0.4, paste("source"), cex = 1.25, lwd = 0.5)
qqnorm(residuals(m6c, "standardized")[, 1], xlim = c(5,-5), ylim = c(5,-5),
main = NULL, cex = 1, lwd = 1, xlab = "", ylab = "")
abline(0, 1, lwd = 1)
qqnorm(residuals(m6c, "standardized")[, 2], xlim = c(5,-5), ylim = c(5,-5),
main = NULL, cex = 1, lwd = 1, ylab = "")
abline(0, 1, lwd = 1)
qqnorm(residuals(m6c, "standardized")[, 3], xlim = c(5,-5), ylim = c(5,-5),
main = NULL, cex = 1, lwd = 1, xlab = "", ylab = "")
abline(0, 1, lwd = 1)
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
dev.off()
# Setup
library(tidyverse)
library(DirichletReg)
library(ggtern)
## Create dataframe with diet proportions and biomass
# Load diversity data
div_d <- read.csv("Data//TetonInverts2020.csv")
head(div_d)
# Change taxa to match diet taxonomic groups
div_dat <- div_d %>% mutate(taxa = case_when(startsWith(Taxa, "Rhy") ~ "Rhyacophilidae",
Taxa %in% c("Simuliidae Pupae", "Heterocloeon", "Prosimuliium", "Helodon") ~ "Simuliidae",
Taxa == "Non-Tanypodinae" ~ "Midges",
Taxa == "Chironomidae Pupae" ~ "Midges",
Taxa == "Tipula (Arctotipula)" ~ "Tipula",
Taxa %in% c("1Megarcys", "2Megarcys") ~ "Megarcys",
Taxa == "Nematoda" ~ "Oligochaeta",
!Taxa %in% c("Rhyacophilidae", "Simuliidae Pupae", "Heterocloeon", "Prosimuliium", "Helodon", "Chironomidae Pupae", "Non-Tanypodinae", "Tipula (Arctotipula)","1Megarcys", "2Megarcys") ~ Taxa   )) %>%
select(Stream, taxa, Biomass_mg_m2) %>% filter(taxa != "Chironomidae Adult") %>% rename(site = Stream)
div_dat
# Rename stream names so that they match
div_dat$site <- as.factor(div_dat$site)
levels(div_dat$site) <- c("AK Basin",  "Cloudveil", "Delta", "Grizzly", "Middle Teton", "NFTC",
"Paintbrush", "SFTC", "Skillet", "South Cascade RG", "The Gusher", "Wind Cave")
# Merge biomass and diet proportions data
data_di <- read.csv("Data//diet_data_clean.csv")
data_di$site <- as.factor(data_di$site)
levels(data_di$site) <- c("AK Basin","Cloudveil","Delta","Grizzly","NFTC", "Paintbrush", "SFTC", "Skillet", "Wind Cave" )
head(data_di)
diet_bm_dat <- merge(data_di, div_dat)
head(diet_bm_dat)
diet_bm_dat$Biomass_mg_m2 <- as.numeric(diet_bm_dat$Biomass_mg_m2)
## Calculate biomass supported by each food source
diet_bm_dat$biomass_t = diet_bm_dat$Biomass_mg_m2*diet_bm_dat$Mean # Biomass per source per taxa
head(diet_bm_dat)
div_dat
diet_bm_dat %>% filter(site == "Cloudveil") %>% summarise(tot = sum(biomass_t)) # Check that it sums to 100
diet_bm_dat %>% group_by(site, taxa, source, Mean) %>% summarise(biomass = sum(Biomass_mg_m2),
biomass_t = biomass*Mean)
div_dat$Biomass_mg_m2 <- as.numeric(div_dat$Biomass_mg_m2)
site_bm <- diet_bm_dat %>% group_by(site, source) %>% summarise(biomass_ss = sum(biomass_t, na.rm = TRUE)) # Total biomass at site by source
bm_dat_site <- diet_bm_dat %>% group_by(site) %>% summarise(biomass_s = sum(biomass_t, na.rm = TRUE))
bm_dat <- merge(site_bm, bm_dat_site, all = TRUE)
bm_dat$biomass_per <- bm_dat$biomass_ss/bm_dat$biomass_s # % Biomass by resource
# add zeroes for Hydrurus
site <- c("SFTC", "Grizzly", "Paintbrush")
Hy_add <- data.frame(site = c("SFTC", "Grizzly", "Paintbrush"),  source = rep("Hydrurus", 3), biomass_per = rep(0, 3))
bm_data <- dplyr::bind_rows(bm_dat, Hy_add)
# load environmental data and merge
Envi_data <- read.csv("Data//Envi_data.csv")
# load environmental data and merge
Envi_data <- read.csv("Output//Envi_data.csv")
Envi_data
bm_envi_dat <- merge(Envi_data, bm_data, all = TRUE)
# make data long
bm_envi_dat_long <- bm_envi_dat %>% gather(env_var, value, Elevation:H)
bm_envi_dat_long %>% filter(source == "Hydrurus")
# facet plot
env_var_labs <- c("Chla (mg/m2)", "Chloride (ug/L)", "DO (mg/)L", "Elevation (m)", "Nitrate (ug/L)", "PCA1", "PCA2", "pH", "SPC", "Sulfate (ug/L)", "Tmax (C)", "TSS (g/L)")
names(env_var_labs) <- c("Chla_mg_m2", "chloride", "DO_mg_L", "Elevation", "nitrate", "PCA1", "PCA2", "pH", "SPC", "sulfate", "Tmax", "TSS_g_L")
p <- bm_envi_dat_long %>% filter(env_var %in% c("Chla_mg_m2", "chloride", "DO_mg_L", "Elevation", "nitrate", "PCA1", "PCA2", "pH", "SPC", "sulfate", "Tmax", "TSS_g_L")) %>%
ggplot() +
geom_point(aes(value, biomass_per, color = source, pch = site)) +
geom_smooth(aes(value, biomass_per, color = source), method='lm') + ylab("% Biomass") +
scale_shape_manual(values=1:10) + theme_bw() + facet_wrap(~env_var, scales = "free_x", labeller = labeller(env_var = env_var_labs)) +
theme(axis.title.x=element_blank())
p
# plot of site means for different water sources
dodge <- position_dodge(width=0.8)
p2 <- bm_envi_dat %>% ggplot(aes(Primary_water_source, biomass_per, fill = source)) + geom_boxplot(position = dodge) +
geom_point(position = dodge, shape = 21, cex = 2) + theme_bw() +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") + xlab(NULL) +
ylab("Biomass (%)") + labs(fill = "Resource")
p2
ggsave("Output//Paper figures//Biomass by hydro.png", height = 4, width = 5)
### Dirichlet regression
# Organize data
spread_bm_dat <- bm_envi_dat %>% select(site, source, biomass_per) %>% spread(key = source, value = biomass_per)
spread_bm_dat
spread_bm_envi_dat <- merge(spread_bm_dat, Envi_data, all = TRUE)
spread_bm_envi_dat
# Plot
ggtern(spread_bm_envi_dat, aes(Biofilm, Hydrurus, CPOM, color = Primary_water_source)) + geom_point()
DB <-DR_data(spread_bm_envi_dat[, 2:4])
plot(DB)
m1b <- DirichReg(DB ~ SPC, spread_bm_envi_dat, model = "common")
summary(m1b)
m2b <- DirichReg(DB ~ Tmean, spread_bm_envi_dat, model = "common")
summary(m2b)
m2.5b <- DirichReg(DB ~ Tmax, spread_bm_envi_dat, model = "common")
summary(m2.5b)
m3b <- DirichReg(DB ~ pH, spread_bm_envi_dat, model = "common")
summary(m3b)
m4b <- DirichReg(DB ~ nitrate, spread_bm_envi_dat, model = "common")
summary(m4b)
m5b <- DirichReg(DB ~ TSS_g_L, spread_bm_envi_dat, model = "common")
summary(m5b)
#spread_bm_envi_dat$Primary_water_source <- factor(spread_bm_envi_dat$Primary_water_source, levels=c( "Snowmelt", "Glacier","Subterranean ice"))
m6b <- DirichReg(DB ~ Primary_water_source, spread_bm_envi_dat, model = "common")
summary(m6b)
m7b <- DirichReg(DB ~ Elevation, spread_bm_envi_dat, model = "common")
summary(m7b)
m8b <- DirichReg(DB ~ DO_mg_L, spread_bm_envi_dat, model = "common")
summary(m8b)
m9b <- DirichReg(DB ~ slope, spread_bm_envi_dat, model = "common")
summary(m9b)
m10b <- DirichReg(DB ~ aspect, spread_bm_envi_dat, model = "common")
summary(m10b)
#m11b <- DirichReg(DB ~ fluoride, weights = w, spread_bm_envi_dat, model = "common")
#summary(m11b)
m12b <- DirichReg(DB ~ chloride, spread_bm_envi_dat, model = "common")
summary(m12b)
m13b <- DirichReg(DB ~ sulfate, spread_bm_envi_dat, model = "common")
summary(m13b)
m14b <- DirichReg(DB ~ Elevation + Tmean, spread_bm_envi_dat, model = "common")
summary(m14b)
m16.2b <- DirichReg(DB ~ Primary_water_source + Tmax, spread_bm_envi_dat, model = "common")
summary(m16.2b)
m20b <- DirichReg(DB ~ PCA1, spread_bm_envi_dat, model = "common")
summary(m20b)
m21b <- DirichReg(DB ~ PCA2, spread_bm_envi_dat, model = "common")
summary(m21b)
### AICc
# AICc = AIC + (2k^2 + 2k)/(n-k-1)
# k is number of parameters
AIC_c <- function(model){-2*model$logLik + 2*model$npar*9/(9-model$npar-1)}
AICc_b <- data.frame(Formula = c("~ SPC", "~ Tmean", "~ Tmax", "~ pH", "~ nitrate", "~ TSS", "~ elevation", "~ DO", "~ slope", "~ aspect", "~ chloride", "~ sulfate", "~ Primary water source", "~ Elevation + Tmean", "~ Primary_water_source + Tmax", "~ PCA1", "~ PCA2"),
model = c("m1b", "m2b", "m2.5b", "m3b", "m4b", "m5b","m7b","m8b","m9b","m10b","m12b","m13b", "m6b", "m14b", "m16.2b","m20b","m21b"), AICc =c(AIC_c(m1b), AIC_c(m2b), AIC_c(m2.5b), AIC_c(m3b), AIC_c(m4b), AIC_c(m5b),
AIC_c(m7b), AIC_c(m8b), AIC_c(m9b), AIC_c(m10b), AIC_c(m12b), AIC_c(m13b), AIC_c(m6b), AIC_c(m14b),AIC_c(m16.2b), AIC_c(m20b), AIC_c(m21b)))
AICc_b
# Table of AIC values for significant models
# Significant: Tmax, pH, nitrate, DO, aspect and chloride
AICc_b <- AICc_b %>% filter(!Formula %in% c("~ Tmax", "~ DO", "~ pH", "~ nitrate", "~ aspect", "~ slope", "~ elevation", "~ sulfate", "~ PCA1", "~ PCA2"))
AICc_b$AICc <- round(AICc_b$AICc, 1)
AICc_B<-AICc_b[order(AICc_b$AICc),]
AICc_B
write.csv(AICc, "Output//AICc biomass table.csv")
x2<- seq(min(spread_bm_envi_dat$Tmean), max(spread_bm_envi_dat$Tmean), length.out = 1000)
pred2 <- predict(m2b, newdata = data.frame(Tmean=x2))
preds2<- data.frame(source = c(rep("Biofilm", length(pred2[,1])), rep("CPOM", length(pred2[,2])), rep("Hydrurus", length(pred2[,3]))),
pred = c(pred2[,1], pred2[,2], pred2[,3]), x = rep(x2, 3), env_var = rep("Tmean", length(pred2[,1])),
sig = c(rep("y", length(pred2[,1])), rep("n", length(pred2[,1])), rep("n", length(pred2[,1])) ))
summary(m12b)
x1<- seq(min(spread_bm_envi_dat$SPC), max(spread_bm_envi_dat$SPC), length.out = 1000)
pred1 <- predict(m1b, newdata = data.frame(SPC=x1))
preds1<- data.frame(source = c(rep("Biofilm", length(pred1[,1])), rep("CPOM", length(pred1[,2])), rep("Hydrurus", length(pred1[,3]))),
pred = c(pred1[,1], pred1[,2], pred1[,3]), x = rep(x1, 3), env_var = rep("SPC", length(pred1[,1])),
sig = c(rep("y", length(pred1[,1])), rep("y", length(pred1[,1])), rep("y", length(pred1[,1])) ))
x5<- seq(min(spread_bm_envi_dat$TSS_g_L), max(spread_bm_envi_dat$TSS_g_L), length.out = 1000)
pred5 <- predict(m5b, newdata = data.frame(TSS_g_L=x5))
preds5<- data.frame(source = c(rep("Biofilm", length(pred5[,1])), rep("CPOM", length(pred5[,2])), rep("Hydrurus", length(pred5[,3]))),
pred = c(pred5[,1], pred5[,2], pred5[,3]), x = rep(x5, 3), env_var = rep("TSS_g_L", length(pred5[,1])),
sig = c(rep("y", length(pred5[,1])), rep("n", length(pred5[,1])), rep("n", length(pred5[,1])) ))
x12<- seq(min(spread_bm_envi_dat$chloride), max(spread_bm_envi_dat$chloride), length.out = 1000)
pred12 <- predict(m12b, newdata = data.frame(chloride=x12))
preds12<- data.frame(source = c(rep("Biofilm", length(pred12[,1])), rep("CPOM", length(pred12[,2])), rep("Hydrurus", length(pred12[,3]))),
pred = c(pred12[,1], pred12[,2], pred12[,3]), x = rep(x12, 3), env_var = rep("chloride", length(pred12[,1])),
sig = c(rep("y", length(pred12[,1])), rep("n", length(pred12[,1])), rep("n", length(pred12[,1])) ))
pred_dat <- rbind(preds2, preds1, preds5, preds12)
head(pred_dat)
pred_dat$env_var <- as.factor(pred_dat$env_var)
class(pred_dat$env_var)
any(is.na(env_dat_long$env_var))
levels(pred_dat$env_var)
# make diet dat long
env_dat_long <- spread_bm_envi_dat %>% select(site, Biofilm, CPOM, Hydrurus, Tmean, SPC, TSS_g_L, chloride) %>%
gather(env_var, value, Tmean:chloride) %>%
select(site, Biofilm, CPOM, Hydrurus, env_var, value) %>%
gather(source, Mean, Biofilm:Hydrurus)
head(env_dat_long)
env_dat_long$env_var <- as.factor(env_dat_long$env_var)
env_dat_long$value <- as.numeric(env_dat_long$value)
levels(env_dat_long$env_var)
cl <- paste("Chloride (", mu,"g/L)")
env_var_labs <- c("SPC", "Tmean (\u00B0C)", "Chloride (ug/L)", "TSS (g/L)")
names(env_var_labs) <- c("SPC", "Tmean", "chloride", "TSS_g_L")
#env_dat_long$env_var <- factor(env_dat_long$env_var,      # Reordering group factor levels
#                         levels = c("PCA1", "PCA2", "pH", "Tmax", "aspect", "SPC"))
p <- ggplot(data = env_dat_long, aes(value, Mean, color = source)) +
geom_point() + facet_wrap(~env_var, scales = "free_x", labeller = labeller(env_var = env_var_labs)) +
geom_line(data = pred_dat, aes(x, pred, color = source, linetype = sig), size = 1) +
scale_color_brewer("Resource", palette = "Dark2") + theme_bw() + ylab("% Biomass") +
scale_linetype_manual(values=c("dashed", "solid"), guide = "none") + xlab(NULL)
p
ggsave("Output//Paper figures//Dirichlet envi facet biomass.png", width = 5, height = 4)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(compositions)
library(ggtern)
library(mvnormtest)
## organize data
Envi_data <- read.csv("Output//Envi_data.csv")
diet_data <- read.csv("Output//diet_data_clean.csv")
diet_means_data <- diet_data %>% group_by(site, source) %>% summarise(Mean = mean(Mean, na.rm = TRUE,
SD = sd(Mean, na.rm = TRUE)))
diet_means_data
# Spread resource data into seperate columns
spread_dat <- diet_data %>% select(site, taxa, source, Mean) %>% spread(key = source, value = Mean)
spread_dat_2 <- diet_data %>% select(site, taxa, source, SD) %>% spread(key = source, value = SD)
names(spread_dat_2) <- c("site", "taxa", "Biofilm_SD", "CPOM_SD", "Hydrurus_SD")
spread_dat$Hydrurus[is.na(spread_dat$Hydrurus)] <- 0
Spread_dat <- merge(spread_dat, spread_dat_2, by = c("site", "taxa"))
# Set SD for zero Hydrurus to max SD for Hydrurus
Spread_dat$Hydrurus_SD[is.na(Spread_dat$Hydrurus_SD)] <- mean(spread_dat_2$Hydrurus_SD, na.rm = TRUE)
# Merge with environmental data
spread_env_dat <- merge(Spread_dat, Envi_data)
names(spread_env_dat)
### Explore variation in compositions
# Create acomp object to use function for metric variation from 'compositions' package
xc = acomp(spread_env_dat[, c("Biofilm","CPOM", "Hydrurus")])
summary(xc)
spread_env_dat$comp <- xc
## within-site variation
# Calculate within-site variation for each site
site <- unique(spread_env_dat$site)
y  <- NULL
for(i in site){
s<- spread_env_dat %>% filter(site == i) %>% select(comp)
temp <- data.frame(site = i, var = mvar(s))
y <- rbind(y, temp)
}
site_var <- y
site_var
mean(site_var$var) # mean within site variation
summary(lm(site_var$var~Envi_data$H)) # site var does not increase with diversity
summary(lm(site_var$var~Envi_data$D))
# Mean within site variation by stream type
mean(site_var$var[c(1,9)]) # Subterranean ice
mean(site_var$var[c(2,3,8)]) # Glacier
mean(site_var$var[c(4,5,6,7)]) # Snowmelt
# ANOVA to test differences in within-site variation among stream types
site_var$W_source <- c("Subterranean ice", "Glacier", "Glacier", "Snowmelt","Snowmelt", "Snowmelt", "Snowmelt", "Glacier", "Subterranean ice")
summary(aov1 <- aov(var ~ W_source, data = site_var))
## Among-site variation using site means
# Calculate site diet porportion means
site_means <- spread_env_dat %>% group_by(site) %>% summarise(Biofilm = mean(Biofilm), CPOM = mean(CPOM), Hydrurus = mean(Hydrurus), Primary_water_source = unique(Primary_water_source))
site_means
# Among-site variation
among_var <- mvar(site_means[,2:4])
among_var
# Among-site variation by stream type
mvar(site_means[c(1,9),2:4]) # Subterranean ice
mvar(site_means[c(2,3,8),2:4]) # Glacier
mvar(site_means[c(4,5,6,7),2:4]) # Snowmelt
# Among-site variation for taxa at >= 3 sites
spread_env_dat %>% group_by(taxa) %>% summarise(n = length(taxa))
taxa <- c("Allomyia", "Ameletidae", "Baetidae", "Homophylax", "Lednia", "Midges", "Simuliidae", "Zapada")
y2  <- NULL
for(i in taxa){
t<- spread_env_dat %>% filter(taxa == i) %>% select(comp)
temp <- data.frame(taxa = i,var = mvar(t))
y2 <- rbind(y2, temp)
}
y2
## Plots to display variation
# Ternary plot grouped by taxa
spread_env_dat$Hydrurus[spread_dat$Hydrurus < .01] <- 0.01 # Make Hydrurus more easily visualized
cols <- brewer.pal(7, "Dark2")
t1 <- spread_env_dat %>% filter(taxa %in% c("Allomyia", "Homophylax", "Lednia", "Midges", "Simuliidae", "Tipula", "Zapada")) %>%
ggtern(aes(Biofilm, CPOM, Hydrurus, fill = taxa)) + geom_point(cex = 4, shape = 21) +
theme_bw() + theme(legend.position= c(0.2,.7)) +
scale_fill_manual(values = cols, name = "Taxa")
t1
ggsave("Output//taxa diet tern.png", width = 6, height = 6)
w_source_means <- spread_env_mean_dat %>% group_by(Primary_water_source) %>% summarise(Biofilm = mean(Biofilm),
CPOM = mean(CPOM),
Hydrurus = mean(Hydrurus))
t1 <- spread_env_dat %>%
ggtern(aes(Biofilm, CPOM, Hydrurus)) + geom_point(aes(shape = site, color = Primary_water_source), stroke = 1.5) +
scale_shape_manual(values=1:10) + guides(shape = FALSE) + theme_bw() +
scale_color_manual(values = c("#2171b5", "#9ecae1", "#08306b"), name="Hydrologic Source") +
theme(legend.position= c(.85,.83)) +
geom_point(data = w_source_means, aes(Biofilm, CPOM, Hydrurus, fill = Primary_water_source), pch = 21, cex = 7, show.legend = FALSE) +
scale_fill_manual(values = c("#2171b5", "#9ecae1", "#08306b"))
t1
ggsave("Output//Paper figures//taxa diet tern WS.png", width = 6, height = 6)
# Ternary plot of most common taxa colored by stream type
datws <-spread_env_dat %>% group_by(taxa, Primary_water_source) %>% summarise(Biofilm = mean(Biofilm),
CPOM = mean(CPOM),
Hydrurus = mean(Hydrurus))
t2 <- datws %>% filter(taxa %in% c("Allomyia", "Ameletidae", "Baetidae", "Homophylax", "Lednia", "Midges", "Simuliidae", "Tipula", "Zapada")) %>% ggtern(aes(Biofilm, CPOM, Hydrurus, color = Primary_water_source, shape = taxa)) + geom_point()
t2
ggsave("Output//taxa diet tern.png")
# Ternary plot of among-site taxa means
taxa_means <- spread_env_dat %>% filter(taxa %in% c("Allomyia", "Ameletidae", "Baetidae", "Homophylax", "Lednia", "Midges", "Simuliidae", "Tipula", "Zapada")) %>%
group_by(taxa) %>% summarise(Biofilm = mean(Biofilm), CPOM = mean(CPOM), Hydrurus = mean(Hydrurus))
taxa_means
t4 <- taxa_means %>% ggtern(aes(Biofilm, CPOM, Hydrurus, color = taxa)) + geom_point()
t4
ggsave("Output//taxa mean diet tern.png")
## Max and min resource use for Lednia and Zapada
spread_env_dat %>% filter(taxa == "Lednia")
## Setup
library(dplyr)
library(plyr)
library(MixSIAR)
library(ggplot2)
library(RColorBrewer)
library(readxl)
library(tidyr)
library(tidyverse)
## Organize data
iso_dat <- read.csv("Data//Teton_Iso_Data_QC.csv")
head(iso_dat)
names(iso_dat)
iso_inv <- iso_dat %>% filter(type == "invert")
# Merge trophic position data
dat_TP <- read.csv("Output//TP_dat.csv")
head(dat_TP)
iso_TP <- merge(iso_inv, dat_TP, by = c("d13C", "d15N"), all = TRUE ) %>% mutate(group = as.factor(group), site = as.factor(site))
head(iso_TP)
# Set all non predatory data to TP = 2
iso_TP$TP <- ifelse(iso_TP$group %in% c("Clinocera", "Sweltsa", "Lednia", "Megarcys", "Rhyacophila", "Simuliidae", "Turbellaria", "Ameletidae", "Baetidae"), iso_TP$TP_calc, 2)
iso_TP$TL<- ifelse(iso_TP$TP > 2.5, "P", "N") # P for predator, N for non-predator
head(iso_TP)
# Standard error function
SE <- function(x) sd(x, na.rm=TRUE)/sqrt(length(na.omit(x)))
# Calculate means and standard deviations for food sources
iso_means <- iso_dat %>% filter(date2 == "A") %>% group_by(group, site) %>%
dplyr::summarize(count = n(),
mC = mean(d13C, na.rm = TRUE),
SEC = SE(d13C),
mN = mean(d15N, na.rm = TRUE),
SEN = SE(d15N),
type = type) %>%
unique() # sometimes 'summarize' is a jerk, so I added this
iso_means
# Setup
library(plyr)
library(readxl)
library(tidyverse)
library(readxl)
# load data
GCA_areas <- read_xlsx("GCA slide areas.xlsx")
# load data
GCA_areas <- read_xlsx("Data//GCA slide areas.xlsx")
ID <- read_xlsx("Data//GCA slides.xlsx")
GCA_da <- merge(GCA_areas, ID, by.x = 1, by.y = 1, all.x = TRUE) %>%
select("ID", "source", "per_area", "taxa", "site") %>%
na.omit()
head(GCA_da)
GCA_da %>% filter(taxa == "Zapada", site == "Delta")
# Multiply by assimilation factors: diatoms, 0.3; amorphous detritus, 0.1; leaf litter, 0.1;
# filamentous algae, 0.3; macrophytes, 0.1; fungi, 0.7; and animal material, 0.7
GCA_dat <- GCA_da %>% mutate(assim = case_when(source %in% c("Hydrurus", "diatoms", "fil. algae") ~ per_area*0.3,
source == "animal" ~ per_area*0.7,
source == "plant" ~ per_area*0.1),
taxa = case_when(taxa %in% c("R. Brunnea group", "R. Rotunda", "R. Vagrita group", "R. Alberta group") ~ "Rhyacophila",
!taxa %in% c("R. Brunnea group", "R. Rotunda", "R. Vagrita group", "R. Alberta group") ~ taxa)) %>%
group_by(ID) %>% mutate(per_assim = assim/sum(assim)*100)
head(GCA_dat)
GCA_dat %>% group_by(ID) %>% summarise(mean = sum(per_assim)) %>% na.omit()# check
# Calculate mean for taxa and site
GCA_data <- GCA_dat %>% group_by(source, taxa, site) %>% summarise( n = length(unique(ID)),
per_assim = mean(per_assim, na.rm = TRUE),
sd = sd(per_assim, na.rm = TRUE))
GCA_dat %>% filter(site == "SFTC", taxa == "Sweltsa") %>% print(n=32)
tail(GCA_data)
unique(GCA_dat$taxa)
write.csv(GCA_data, "Output//GCA_data.csv")
# Facet plot of all sites
p_wrap <- GCA_data %>% filter(site != "Gusher", per_assim != 0) %>% ggplot(aes(per_assim, taxa, color = source)) +
geom_point(aes(pch = source),cex = 2, stroke = 1.5) +
facet_wrap(~ site, ncol = 4) + geom_errorbar(aes(xmin=per_assim-sd, xmax=per_assim+sd), width=1) +
geom_text(aes(115, taxa, label = n), color = 1, cex = 3) +
scale_x_continuous(breaks=c(0,25,50, 75, 100)) + labs( x = "Diet Proportion", y = "Taxa", color = "Source", shape = "Source") +
scale_shape_manual(values=c(3,4,1,2,6), labels = c("Animal", "Diatoms", "Filamentous algae", "Hydrurus", "Plant")) +
scale_color_manual(labels = c("Animal", "Diatoms", "Filamentous algae", "Hydrurus", "Plant"), values = c("#1B9E77", "#D95F02", "#7570B3", "#66A61E", "#E6AB02", "#A6761D")) +
theme_bw()
p_wrap
# Plot with stacked bars
GCA_data$site <- as.factor(GCA_data$site)
GCA_data$site_2 <- factor(GCA_data$site,
levels = c("Delta", "Skillet", "AK Basin", "Wind Cave", "SFTC", "NFTC", "Grizzly", "Paintbrush", "Gusher"))
levels(GCA_data$site)
site_lab <- c("Delta", "Skillet", "Alaska Basin", "Wind Cave","S Fork Teton Creek", "N Fork Teton Creek", "Grizzly", "Paintbrush")
names(site_lab) <- c("Delta", "Skillet", "AK Basin", "Wind Cave", "SFTC", "NFTC", "Grizzly", "Paintbrush")
p_wrap <- GCA_data %>% filter(site != "Gusher", source != "Other") %>% ggplot(aes(per_assim, reorder(taxa, desc(taxa)), fill = source)) +
geom_bar(position="fill", stat="identity") +
facet_wrap(~ site_2, ncol = 2, labeller = labeller(site_2 = site_lab)) +
geom_text(aes(0.8, taxa, label = n), cex = 2, nudge_y = 0.1) +
scale_x_continuous(breaks=c(0,.25,.50, .75, 1)) + labs( x = "Diet Proportion", y = "Taxon") +
scale_fill_manual(name = "Resource", labels = c("Animal", "Diatoms", "Filamentous algae", "Hydrurus", "Plant"), values = c("#E6AB02", "#1B9E77", "#66A61E","#7570B3", "#D95F02")) +
theme_bw() + theme(strip.text = element_text(color = 'white'), axis.text=element_text(size=8))
p_wrap
library(grid)
png("Output//Paper figures//GCA facet stacked.png", width = 7, height = 8, units = "in", res = 200)
g <- ggplot_gtable(ggplot_build(p_wrap))
stripr <- which(grepl('strip-t', g$layout$name))
fills <- c("#6baed6", "#6baed6", "#6baed6", "#6baed6", "#2171b5","#2171b5", "#08306b", "#08306b")
k <- 1
for (i in stripr) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.draw(g)
dev.off()
