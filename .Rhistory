scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
labs(fill = "Resource") + xlab(NULL) +
ylab("Diet Proportion") + theme_bw() +
#scale_colour_continuous(guide = "none") +
geom_point(data = df, aes(WS, value, color = name), size = 12, position = position_dodge(width = 0.75), shape = 95,  key_glyph = "line") +
geom_errorbar(data = boot.ci, aes(x = Primary_water_source, y = p.50, ymin = p2.5, ymax = p97.5, color = source), width = 0.3, position = position_dodge(width = 0.75))
p100
p100 <- means %>% ggplot() +
#geom_boxplot(aes(Primary_water_source, value, col = source)) +
geom_point(aes(Primary_water_source, value, col = source), cex = 2, position = position_dodge(width = 0.75)) +
scale_fill_brewer(palette = "Dark2", guide = "none") +
scale_color_brewer(palette = "Dark2", labels = c("Biofilm", "CPOM", expression(italic("Hydrurus")))) +
#annotate(geom="text", x=2, y=0.38, label="a", color="#D95F02") +
#annotate(geom="text", x=3, y=0.29, label="a", color="#D95F02") +
labs(col = "Resource") + xlab(NULL) +
ylab("Biomass Proportion") + theme_bw() +
#scale_colour_continuous(guide = "none") +
geom_point(data = df, aes(WS, value, col = name), width = 1, size = 12, position = position_dodge(width = 0.75), shape = 95, key_glyph = "point") +
geom_errorbar(data = boot.ci.b, aes(x = Primary_water_source, y = p.50, ymin = p2.5, ymax = p97.5, col = source), width = 0.3, position = position_dodge(width = 0.75),  key_glyph = "point")
p100
p100 <- means %>% ggplot() +
geom_boxplot(aes(Primary_water_source, value, col = source), alpha = 0) +
geom_point(aes(Primary_water_source, value, color = source), cex = 2, position = position_dodge(width = 0.75)) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
labs(fill = "Resource") + xlab(NULL) +
ylab("Diet Proportion") + theme_bw() +
#scale_colour_continuous(guide = "none") +
geom_point(data = df, aes(WS, value, fill = name), width = 1, size = 12, position = position_dodge(width = 0.75), shape = 95, key_glyph = "point") +
geom_errorbar(data = boot.ci, aes(x = Primary_water_source, y = p.50, ymin = p2.5, ymax = p97.5, fill = source), width = 0.3, position = position_dodge(width = 0.75), key_glyph = "point")
p100
p100 <- means %>% ggplot() +
#geom_boxplot(aes(Primary_water_source, value, col = source)) +
geom_point(aes(Primary_water_source, value, color = source), cex = 2, position = position_dodge(width = 0.75)) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
labs(fill = "Resource") + xlab(NULL) +
ylab("Diet Proportion") + theme_bw() +
#scale_colour_continuous(guide = "none") +
geom_point(data = df, aes(WS, value, color = name), size = 12, position = position_dodge(width = 0.75), shape = 95,  key_glyph = "line") +
geom_errorbar(data = boot.ci, aes(x = Primary_water_source, y = p.50, ymin = p2.5, ymax = p97.5, color = source), width = 0.3, position = position_dodge(width = 0.75), key_glyph = "point")
p100
p100 <- means %>% ggplot() +
#geom_boxplot(aes(Primary_water_source, value, col = source)) +
geom_point(aes(Primary_water_source, value, color = source), cex = 2, position = position_dodge(width = 0.75)) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
labs(fill = "Resource") + xlab(NULL) +
ylab("Diet Proportion") + theme_bw() +
#scale_colour_continuous(guide = "none") +
geom_point(data = df, aes(WS, value, color = name), size = 12, position = position_dodge(width = 0.75), shape = 95,  key_glyph = "line") +
geom_errorbar(data = boot.ci, aes(x = Primary_water_source, y = p.50, ymin = p2.5, ymax = p97.5, color = source), width = 0.3, position = position_dodge(width = 0.75), key_glyph = "point")
p100
p100 <- means %>% ggplot() +
#geom_boxplot(aes(Primary_water_source, value, col = source)) +
geom_point(aes(Primary_water_source, value, color = source), cex = 2, position = position_dodge(width = 0.75)) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
labs(fill = "Resource") + xlab(NULL) +
ylab("Diet Proportion") + theme_bw() +
#scale_colour_continuous(guide = "none") +
geom_point(data = df, aes(WS, value, color = name), size = 12, position = position_dodge(width = 0.75), shape = 95) +
geom_errorbar(data = boot.ci, aes(x = Primary_water_source, y = p.50, ymin = p2.5, ymax = p97.5, color = source), width = 0.3, position = position_dodge(width = 0.75), key_glyph = "point")
p100
p100 <- means %>% ggplot() +
#geom_boxplot(aes(Primary_water_source, value, col = source)) +
geom_point(aes(Primary_water_source, value, color = source), cex = 2, position = position_dodge(width = 0.75)) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
labs(col = "Resource") + xlab(NULL) +
ylab("Diet Proportion") + theme_bw() +
#scale_colour_continuous(guide = "none") +
geom_point(data = df, aes(WS, value, color = name), size = 12, position = position_dodge(width = 0.75), shape = 95) +
geom_errorbar(data = boot.ci, aes(x = Primary_water_source, y = p.50, ymin = p2.5, ymax = p97.5, color = source), width = 0.3, position = position_dodge(width = 0.75), key_glyph = "point")
p100
ggsave("Output//Paper figures//Diet by Hydro.png", width = 5, height = 3.6)
# Plot diet proportions by hydrologic source
p100 <- means %>% ggplot() +
geom_boxplot(aes(Primary_water_source, value, col = source)) +
geom_point(aes(Primary_water_source, value, col = source), cex = 2, shape = 21, position = position_dodge(width = 0.75)) +
scale_fill_brewer(palette = "Dark2", guide = "none") +
scale_color_brewer(palette = "Dark2") +
#annotate(geom="text", x=2, y=0.38, label="a", color="#D95F02") +
#annotate(geom="text", x=3, y=0.29, label="a", color="#D95F02") +
labs(fill = "Resource") + xlab(NULL) +
ylab("Diet Proportion") + theme_bw() +
#scale_colour_continuous(guide = "none") +
geom_boxplot(data = df, aes(WS, value, fill = name), width = 1, position = position_dodge(width = 0.75)) +
theme(legend.position = "Bottom")
p100
# Plot diet proportions by hydrologic source
p100 <- means %>% ggplot() +
geom_boxplot(aes(Primary_water_source, value, col = source)) +
geom_point(aes(Primary_water_source, value, col = source), cex = 2, shape = 21, position = position_dodge(width = 0.75)) +
scale_fill_brewer(palette = "Dark2", guide = "none") +
scale_color_brewer(palette = "Dark2") +
#annotate(geom="text", x=2, y=0.38, label="a", color="#D95F02") +
#annotate(geom="text", x=3, y=0.29, label="a", color="#D95F02") +
labs(fill = "Resource") + xlab(NULL) +
ylab("Diet Proportion") + theme_bw() +
#scale_colour_continuous(guide = "none") +
geom_boxplot(data = df, aes(WS, value, fill = name), width = 1, position = position_dodge(width = 0.75)) +
theme(legend.position = "bottom")
p100
p100 <- means %>% ggplot() +
#geom_boxplot(aes(Primary_water_source, value, col = source)) +
geom_point(aes(Primary_water_source, value, color = source), cex = 2, position = position_dodge(width = 0.75)) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
labs(col = "Resource") + xlab(NULL) +
ylab("Diet Proportion") + theme_bw() +
#scale_colour_continuous(guide = "none") +
geom_point(data = df, aes(WS, value, color = name), size = 12, position = position_dodge(width = 0.75), shape = 95) +
geom_errorbar(data = boot.ci, aes(x = Primary_water_source, y = p.50, ymin = p2.5, ymax = p97.5, color = source), width = 0.3, position = position_dodge(width = 0.75), key_glyph = "point") +
theme(legend.position = "bottom")
p100
## Setup
library(DirichletReg)
library(dplyr)
library(tidyverse)
library(ggtern)
library(RVAideMemoire)
## Organize data
Envi_data <- read.csv("Output//Envi_data.csv") # Environmental variables
diet_data <- read.csv("Output//diet_data_clean.csv") # Diet compositions
# Spread data
spread1 <- diet_data %>% select(site, taxa, source, Mean) %>% spread(key = source, value = Mean)
# Enter zeroes for sites without Hydrurus
spread1$Hydrurus[is.na(spread1$Hydrurus)] <- 0
# Calculate site means
diet_means_data <- spread1 %>% group_by(site) %>% summarise(n = length(Biofilm),
Biofilm = mean(Biofilm, na.rm = TRUE),
CPOM = mean(CPOM, na.rm = TRUE),
Hydrurus = mean(Hydrurus, na.rm = TRUE))
diet_means_data
# Combine diet and environmental data
spread_env_mean_dat <- merge(diet_means_data, Envi_data)
# Make all proportions sum to 1 (this is a slight adjustment)
spread_env_m_dat <- spread_env_mean_dat %>% group_by(site) %>% mutate(Biofilm = round(Biofilm/(Biofilm+CPOM+Hydrurus),2),
CPOM = round(CPOM/(Biofilm+CPOM+Hydrurus),2),
Hydrurus = round(Hydrurus/(Biofilm+CPOM+Hydrurus),2))
spread_env_m_dat
spread_env_m_dat %>% group_by(site) %>% summarise(tot = sum(Biofilm+CPOM+Hydrurus)) # Check that they sum to 1
## Test for multivariate normality
names(spread_env_m_dat)
mshapiro.test(t(spread_env_m_dat[,c(9,12,13,15,20)])) # Test environmental variables: pass
mshapiro.test(t(spread_env_m_dat[,c(3:5)])) # Test diet compositions: barely fails
## Setup
library(DirichletReg)
library(dplyr)
library(tidyverse)
library(ggtern)
library(RVAideMemoire)
## Organize data
Envi_data <- read.csv("Output//Envi_data.csv") # Environmental variables
diet_data <- read.csv("Output//diet_data_clean.csv") # Diet compositions
# Spread data
spread1 <- diet_data %>% select(site, taxa, source, Mean) %>% spread(key = source, value = Mean)
# Enter zeroes for sites without Hydrurus
spread1$Hydrurus[is.na(spread1$Hydrurus)] <- 0
# Calculate site means
diet_means_data <- spread1 %>% group_by(site) %>% summarise(n = length(Biofilm),
Biofilm = mean(Biofilm, na.rm = TRUE),
CPOM = mean(CPOM, na.rm = TRUE),
Hydrurus = mean(Hydrurus, na.rm = TRUE))
diet_means_data
# Combine diet and environmental data
spread_env_mean_dat <- merge(diet_means_data, Envi_data)
# Make all proportions sum to 1 (this is a slight adjustment)
spread_env_m_dat <- spread_env_mean_dat %>% group_by(site) %>% mutate(Biofilm = round(Biofilm/(Biofilm+CPOM+Hydrurus),2),
CPOM = round(CPOM/(Biofilm+CPOM+Hydrurus),2),
Hydrurus = round(Hydrurus/(Biofilm+CPOM+Hydrurus),2))
spread_env_m_dat
spread_env_m_dat %>% group_by(site) %>% summarise(tot = sum(Biofilm+CPOM+Hydrurus)) # Check that they sum to 1
## Test for multivariate normality
names(spread_env_m_dat)
mshapiro.test(t(spread_env_m_dat[,c(9,12,13,15,20)])) # Test environmental variables: pass
mshapiro.test(t(spread_env_m_dat[,c(3:5)])) # Test diet compositions: barely fails
# Plot site diet means
ggtern(spread_env_m_dat, aes(Biofilm, Hydrurus, CPOM, color = Primary_water_source)) + geom_point() +
theme_bw() + scale_color_manual(values = 1:3, name = "Hydrologic source")
DD <-DR_data(spread_env_m_dat[, c(3:5)]) # Select response variables
plot(DD)
# Models with single explanatory variables
m6c <- DirichReg(DD ~ Primary_water_source, spread_env_m_dat, model = "common")
summary(m6c)
fitted(m6c, mu = TRUE, alpha = T, phi = T)
B <- 1000    # amount of repeated bootstrap sampling
boot.beta0 <- NULL #empty vector
boot.beta1 <- NULL #empty vector
boot.fun <- function(x){
dat <- spread_env_m_dat[, c(1,3:5, 7)]
sub <- dat %>% filter(Primary_water_source == "Subterranean ice")
glacier <- dat %>% filter(Primary_water_source == "Glacier")
snow <- dat %>% filter(Primary_water_source == "Snowmelt")
sub.dat <- sub[sample(nrow(sub), 2, replace = T),]
glacier.dat <- glacier[sample(nrow(glacier), 3, replace = T),]
snow.dat <-snow[sample(nrow(snow), 4, replace = T),]
data <- rbind(sub.dat, glacier.dat, snow.dat)
data
# Sum to 1
data <- data %>% group_by() %>% mutate(Biofilm = round(Biofilm/(Biofilm+CPOM+Hydrurus),2),
CPOM = round(CPOM/(Biofilm+CPOM+Hydrurus),2),
Hydrurus = round(Hydrurus/(Biofilm+CPOM+Hydrurus),2))
DD <-DR_data(data[,2:4])
m6c <- DirichReg(DD ~ Primary_water_source, data, model = "common")
df <- as.data.frame(fitted(m6c, mu = TRUE, alpha = F, phi = F))
df$Primary_water_source <- c(rep("Subterranean ice", 2), rep("Glacier", 3), rep("Snowmelt", 4))
df <- df %>% unique()
return(df)
}
boot.fun()
list <- lapply(1:100, boot.fun)
boot <- rbindlist(list)
library(data.table)
data <- rbind(sub.dat, glacier.dat, snow.dat)
boot.fun <- function(x){
dat <- spread_env_m_dat[, c(1,3:5, 7)]
sub <- dat %>% filter(Primary_water_source == "Subterranean ice")
glacier <- dat %>% filter(Primary_water_source == "Glacier")
snow <- dat %>% filter(Primary_water_source == "Snowmelt")
sub.dat <- sub[sample(nrow(sub), 2, replace = T),]
glacier.dat <- glacier[sample(nrow(glacier), 3, replace = T),]
snow.dat <-snow[sample(nrow(snow), 4, replace = T),]
data <- rbind(sub.dat, glacier.dat, snow.dat)
data
# Sum to 1
data <- data %>% group_by() %>% mutate(Biofilm = round(Biofilm/(Biofilm+CPOM+Hydrurus),2),
CPOM = round(CPOM/(Biofilm+CPOM+Hydrurus),2),
Hydrurus = round(Hydrurus/(Biofilm+CPOM+Hydrurus),2))
DD <-DR_data(data[,2:4])
m6c <- DirichReg(DD ~ Primary_water_source, data, model = "common")
df <- as.data.frame(fitted(m6c, mu = TRUE, alpha = F, phi = F))
df$Primary_water_source <- c(rep("Subterranean ice", 2), rep("Glacier", 3), rep("Snowmelt", 4))
df <- df %>% unique()
return(df)
}
boot <- rbindlist(list)
head(boot)
boot.ci <- boot  %>% pivot_longer(cols = 1:3, names_to = "source") %>% group_by(Primary_water_source, source) %>%
summarise(p2.5 = quantile(value, probs = 0.025),
p.50 = quantile(value, probs = 0.5),
p97.5 = quantile(value, probs = 0.975))
boot.ci
p100 <- means %>% ggplot() +
#geom_boxplot(aes(Primary_water_source, value, col = source)) +
geom_point(aes(Primary_water_source, value, color = source), cex = 2, position = position_dodge(width = 0.75)) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
labs(col = "Resource") + xlab(NULL) +
ylab("Diet Proportion") + theme_bw() +
#scale_colour_continuous(guide = "none") +
geom_point(data = df, aes(WS, value, color = name), size = 12, position = position_dodge(width = 0.75), shape = 95) +
geom_errorbar(data = boot.ci, aes(x = Primary_water_source, y = p.50, ymin = p2.5, ymax = p97.5, color = source), width = 0.3, position = position_dodge(width = 0.75), key_glyph = "point") +
theme(legend.position = "bottom")
p100
# Models with single explanatory variables
m6c <- DirichReg(DD ~ Primary_water_source, spread_env_m_dat, model = "common")
summary(m6c)
fitted(m6c, mu = TRUE, alpha = T, phi = T)
## Plot of site mean diet composition and model fits by hydrologic source
# Reformat data
means <- spread_env_m_dat[,c(1,3,4,5,7)] %>% pivot_longer(cols = 2:4, names_to = "source")
# Extract model fits
df <- as.data.frame(predict(m6c))
df$WS <- spread_env_m_dat$Primary_water_source
df <- df %>% pivot_longer(cols = 1:3)
df %>% ggplot(aes(WS, value, color = name)) + geom_boxplot()
p100 <- means %>% ggplot() +
#geom_boxplot(aes(Primary_water_source, value, col = source)) +
geom_point(aes(Primary_water_source, value, color = source), cex = 2, position = position_dodge(width = 0.75)) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2") +
labs(col = "Resource") + xlab(NULL) +
ylab("Diet Proportion") + theme_bw() +
#scale_colour_continuous(guide = "none") +
geom_point(data = df, aes(WS, value, color = name), size = 12, position = position_dodge(width = 0.75), shape = 95) +
geom_errorbar(data = boot.ci, aes(x = Primary_water_source, y = p.50, ymin = p2.5, ymax = p97.5, color = source), width = 0.3, position = position_dodge(width = 0.75), key_glyph = "point") +
theme(legend.position = "bottom")
p100
boot.ci <- boot  %>% pivot_longer(cols = 1:3, names_to = "source") %>% group_by(Primary_water_source, source) %>%
summarise(p2.5 = quantile(value, probs = 0.025),
p.50 = quantile(value, probs = 0.5),
p97.5 = quantile(value, probs = 0.975),
SD = sd(value))
boot.ci
## Taxa specific models
n <- spread %>% group_by(taxa) %>% summarise(n = length(taxa))
n
# Make all proportions sum to 1
spread_2 <- spread %>% group_by(site, taxa) %>% mutate(Biofilm = round(Biofilm/(Biofilm+CPOM+Hydrurus),2),
CPOM = round(CPOM/(Biofilm+CPOM+Hydrurus),2),
Hydrurus = round(Hydrurus/(Biofilm+CPOM+Hydrurus),2))
## Taxa specific models
n <- spread %>% group_by(taxa) %>% summarise(n = length(taxa))
## Setup
library(DirichletReg)
library(dplyr)
library(tidyverse)
library(ggtern)
library(RVAideMemoire)
## Organize data
Envi_data <- read.csv("Output//Envi_data.csv") # Environmental variables
diet_data <- read.csv("Output//diet_data_clean.csv") # Diet compositions
# Spread data
spread1 <- diet_data %>% select(site, taxa, source, Mean) %>% spread(key = source, value = Mean)
# Enter zeroes for sites without Hydrurus
spread1$Hydrurus[is.na(spread1$Hydrurus)] <- 0
# Calculate site means
diet_means_data <- spread1 %>% group_by(site) %>% summarise(n = length(Biofilm),
Biofilm = mean(Biofilm, na.rm = TRUE),
CPOM = mean(CPOM, na.rm = TRUE),
Hydrurus = mean(Hydrurus, na.rm = TRUE))
diet_means_data
# Combine diet and environmental data
spread_env_mean_dat <- merge(diet_means_data, Envi_data)
# Make all proportions sum to 1 (this is a slight adjustment)
spread_env_m_dat <- spread_env_mean_dat %>% group_by(site) %>% mutate(Biofilm = round(Biofilm/(Biofilm+CPOM+Hydrurus),2),
CPOM = round(CPOM/(Biofilm+CPOM+Hydrurus),2),
Hydrurus = round(Hydrurus/(Biofilm+CPOM+Hydrurus),2))
spread_env_m_dat
spread_env_m_dat %>% group_by(site) %>% summarise(tot = sum(Biofilm+CPOM+Hydrurus)) # Check that they sum to 1
### Construct models
# Plot site diet means
ggtern(spread_env_m_dat, aes(Biofilm, Hydrurus, CPOM, color = Primary_water_source)) + geom_point() +
theme_bw() + scale_color_manual(values = 1:3, name = "Hydrologic source")
# Model using DirichletReg
# Common parameterization
DD <-DR_data(spread_env_m_dat[, c(3:5)]) # Select response variables
plot(DD)
# Models with single explanatory variables
m6c <- DirichReg(DD ~ Primary_water_source, spread_env_m_dat, model = "common")
summary(m6c)
fitted(m6c, mu = TRUE, alpha = T, phi = T)
## Taxa specific models
n <- spread %>% group_by(taxa) %>% summarise(n = length(taxa))
## Taxa specific models
n <- spread1 %>% group_by(taxa) %>% summarise(n = length(taxa))
n
# Make all proportions sum to 1
spread_2 <- spread1 %>% group_by(site, taxa) %>% mutate(Biofilm = round(Biofilm/(Biofilm+CPOM+Hydrurus),2),
CPOM = round(CPOM/(Biofilm+CPOM+Hydrurus),2),
Hydrurus = round(Hydrurus/(Biofilm+CPOM+Hydrurus),2))
spread_2
# Create dataframe
spread_2 %>% group_by(site, taxa) %>% summarise(tot = sum(Biofilm+CPOM+Hydrurus))
spread_taxa <- merge(spread_2, Envi_data)
# Select taxa and hydrologic sources
spread_t <- filter(spread_taxa, taxa == "Midges", Primary_water_source %in% c("Glacier", "Snowmelt"))
# Plot
ggtern(spread_t, aes(Biofilm, Hydrurus, CPOM, color = Primary_water_source)) + geom_point()
# Model
DT <-DR_data(spread_t[, c(3,4,5)]) # Select response variables
plot(DT)
tm1 <- DirichReg(DT ~ Primary_water_source, spread_t, model = "common")
summary(tm1)
# Select taxa and hydrologic sources
spread_t <- filter(spread_taxa, taxa == "Zapada")
# Plot
ggtern(spread_t, aes(Biofilm, Hydrurus, CPOM, color = Primary_water_source)) + geom_point()
# Select taxa and hydrologic sources
spread_t <- filter(spread_taxa, taxa == "Zapada", Primary_water_source %in% c("Glacier", "Subterranean ice"))
# Plot
ggtern(spread_t, aes(Biofilm, Hydrurus, CPOM, color = Primary_water_source)) + geom_point()
# Model
DT <-DR_data(spread_t[, c(3,4,5)]) # Select response variables
plot(DT)
tm1 <- DirichReg(DT ~ Primary_water_source, spread_t, model = "common")
summary(tm1)
# Compare use of CPOM between Lednia and Zapada
data_diet %>% filter(taxa %in% c("Lednia", "Zapada")) %>% group_by(taxa, source) %>% summarise(max = max(Mean),
mean = mean(Mean),
sd = sd(Mean))
dat <- spread_t[, c(3,4,5)]
sub <- dat %>% filter(Primary_water_source == "Subterranean ice")
head(spread_t)
dat <- spread_t[, c(3:5,7)]
sub <- dat %>% filter(Primary_water_source == "Subterranean ice")
glacier <- dat %>% filter(Primary_water_source == "Glacier")
sub.dat <- sub[sample(nrow(sub), 2, replace = T),]
glacier.dat <- glacier[sample(nrow(glacier), 3, replace = T),]
data <- rbind(sub.dat, glacier.dat)
sub.dat <- sub[sample(nrow(sub), 2, replace = T),]
glacier.dat <- glacier[sample(nrow(glacier), 2, replace = T),]
data <- rbind(sub.dat, glacier.dat)
# Sum to 1
data <- data %>% group_by() %>% mutate(Biofilm = round(Biofilm/(Biofilm+CPOM+Hydrurus),2),
CPOM = round(CPOM/(Biofilm+CPOM+Hydrurus),2),
Hydrurus = round(Hydrurus/(Biofilm+CPOM+Hydrurus),2))
DD <-DR_data(data[,2:4])
data
DD <-DR_data(data[,1:3])
m6c <- DirichReg(DD ~ Primary_water_source, data, model = "common")
summary(m6c)
df <- as.data.frame(fitted(m6c, mu = TRUE, alpha = F, phi = F))
df$Primary_water_source <- c(rep("Subterranean ice", 2), rep("Glacier", 2))
df <- df %>% unique()
return(df)
df
library(data.table)
boot.fun <- function(x){
dat <- spread_t[, c(3:5,7)]
sub <- dat %>% filter(Primary_water_source == "Subterranean ice")
glacier <- dat %>% filter(Primary_water_source == "Glacier")
sub.dat <- sub[sample(nrow(sub), 2, replace = T),]
glacier.dat <- glacier[sample(nrow(glacier), 2, replace = T),]
data <- rbind(sub.dat, glacier.dat)
# Sum to 1
data <- data %>% group_by() %>% mutate(Biofilm = round(Biofilm/(Biofilm+CPOM+Hydrurus),2),
CPOM = round(CPOM/(Biofilm+CPOM+Hydrurus),2),
Hydrurus = round(Hydrurus/(Biofilm+CPOM+Hydrurus),2))
DD <-DR_data(data[,1:3])
m6c <- DirichReg(DD ~ Primary_water_source, data, model = "common")
df <- as.data.frame(fitted(m6c, mu = TRUE, alpha = F, phi = F))
df$Primary_water_source <- c(rep("Subterranean ice", 2), rep("Glacier", 2))
df <- df %>% unique()
return(df)
}
boot.fun()
list.b <- lapply(1:100, boot.fun)
list.b <- lapply(1:10, boot.fun)
boot.b <- rbindlist(list.b)
head(boot.b)
list.b <- lapply(1:100, boot.fun)
boot.b <- rbindlist(list.b)
head(boot.b)
boot.ci.b <- boot.b  %>% pivot_longer(cols = 1:3, names_to = "source") %>% group_by(Primary_water_source, source) %>%
summarise(p2.5 = quantile(value, probs = 0.025),
p.50 = quantile(value, probs = 0.5),
p97.5 = quantile(value, probs = 0.975))
boot.ci.b
boot.ci.b %>% ggplot(aes(p.50, Primary_water_source)) + geom_point()
boot.ci.b %>% ggplot(aes(p.50, Primary_water_source, color = source)) + geom_point()
boot.ci.b %>% ggplot(aes(p.50, Primary_water_source, color = source)) + geom_point() + geom_errorbar(aes(x = p2.5, Primary_water_source, color = source))
boot.ci.b %>% ggplot(aes(p.50, Primary_water_source, color = source)) + geom_point() + geom_point(aes(x = p2.5, Primary_water_source, color = source))
boot.ci.b %>% ggplot(aes(p.50, Primary_water_source, color = source)) + geom_point() + geom_point(aes(x = p2.5, Primary_water_source, color = source), shape = 2)
boot.ci.b %>% ggplot(aes(p.50, Primary_water_source, color = source)) + geom_point() + geom_point(aes(x = p2.5, Primary_water_source, color = source), shape = 2) +
geom_point() + geom_point(aes(x = p.975, Primary_water_source, color = source), shape = 2)
boot.ci.b <- boot.b  %>% pivot_longer(cols = 1:3, names_to = "source") %>% group_by(Primary_water_source, source) %>%
summarise(p2.5 = quantile(value, probs = 0.025),
p50 = quantile(value, probs = 0.5),
p97.5 = quantile(value, probs = 0.975))
boot.ci.b %>% ggplot(aes(p50, Primary_water_source, color = source)) + geom_point() + geom_point(aes(x = p2.5, Primary_water_source, color = source), shape = 2) +
geom_point() + geom_point(aes(x = p97.5, Primary_water_source, color = source), shape = 2)
# Setup
library(tidyverse)
library(DirichletReg)
library(ggtern)
## Create dataframe with diet proportions and biomass
# Load diversity data
div_d <- read.csv("Data//TetonInverts2020.csv")
head(div_d)
div_d <- div_d %>% dplyr::mutate(across(c(L1:L20),~ifelse(is.na(.), 0, 1))) %>%
dplyr::mutate(n = rowSums(across(L1:L20), na.rm = T))
# Change taxa to match diet taxonomic groups
div_dat <- div_d %>% dplyr::mutate(taxa = case_when(startsWith(Taxa, "Rhy") ~ "Rhyacophilidae",
Taxa %in% c("Simuliidae Pupae", "Heterocloeon", "Prosimuliium", "Helodon") ~ "Simuliidae",
Taxa == "Non-Tanypodinae" ~ "Midges",
Taxa == "Chironomidae Pupae" ~ "Midges",
Taxa == "Tipula (Arctotipula)" ~ "Tipula",
Taxa %in% c("1Megarcys", "2Megarcys") ~ "Megarcys",
Taxa == "Nematoda" ~ "Oligochaeta",
!Taxa %in% c("Rhyacophilidae", "Simuliidae Pupae", "Heterocloeon", "Prosimuliium", "Helodon", "Chironomidae Pupae", "Non-Tanypodinae", "Tipula (Arctotipula)","1Megarcys", "2Megarcys") ~ Taxa   )) %>%
dplyr::select(Stream, taxa, Biomass_mg_m2, n) %>% filter(taxa != "Chironomidae Adult") %>% dplyr::rename(site = Stream)
a <- div_dat %>% dplyr::group_by(site, taxa) %>% dplyr::summarise(n = sum(n))
write.csv(a,"bionums.csv")
# Rename stream names so that they match
div_dat$site <- as.factor(div_dat$site)
levels(div_dat$site) <- c("AK Basin",  "Cloudveil", "Delta", "Grizzly", "Middle Teton", "NFTC",
"Paintbrush", "SFTC", "Skillet", "South Cascade RG", "The Gusher", "Wind Cave")
# Merge biomass and diet proportions data
data_di <- read.csv("Output//diet_data_clean.csv")
data_di$site <- as.factor(data_di$site)
levels(data_di$site) <- c("AK Basin","Cloudveil","Delta","Grizzly","NFTC", "Paintbrush", "SFTC", "Skillet", "Wind Cave" )
head(data_di)
diet_bm_dat <- merge(data_di, div_dat)
head(diet_bm_dat)
diet_bm_dat$Biomass_mg_m2 <- as.numeric(diet_bm_dat$Biomass_mg_m2)
## Calculate biomass supported by each food source
diet_bm_dat$biomass_t = diet_bm_dat$Biomass_mg_m2*diet_bm_dat$Mean # Biomass per source per taxa
head(diet_bm_dat)
div_dat
diet_bm_dat %>% filter(site == "Cloudveil") %>% summarise(tot = sum(biomass_t)) # Check that it sums to 100
diet_bm_dat %>% group_by(site, taxa, source, Mean) %>% summarise(biomass = sum(Biomass_mg_m2),
biomass_t = biomass*Mean)
div_dat$Biomass_mg_m2 <- as.numeric(div_dat$Biomass_mg_m2)
site_bm <- diet_bm_dat %>% group_by(site, source) %>% summarise(biomass_ss = sum(biomass_t, na.rm = TRUE)) # Total biomass at site by source
bm_dat_site <- diet_bm_dat %>% group_by(site) %>% summarise(biomass_s = sum(biomass_t, na.rm = TRUE))
bm_dat <- merge(site_bm, bm_dat_site, all = TRUE)
bm_dat$biomass_per <- bm_dat$biomass_ss/bm_dat$biomass_s # % Biomass by resource
# Add zeroes for Hydrurus
site <- c("SFTC", "Grizzly", "Paintbrush")
Hy_add <- data.frame(site = c("SFTC", "Grizzly", "Paintbrush"),  source = rep("Hydrurus", 3), biomass_per = rep(0, 3))
bm_data <- dplyr::bind_rows(bm_dat, Hy_add)
# Load environmental data and merge
Envi_data <- read.csv("Output//Envi_data.csv")
Envi_data
bm_envi_dat <- merge(Envi_data, bm_data, all = TRUE)
### Dirichlet regression
# Organize data
spread_bm_dat <- bm_envi_dat %>% select(site, source, biomass_per) %>% spread(key = source, value = biomass_per)
spread_bm_dat
spread_bm_envi_dat <- merge(spread_bm_dat, Envi_data, all = TRUE)
spread_bm_envi_dat
# Plot
ggtern(spread_bm_envi_dat, aes(Biofilm, Hydrurus, CPOM, color = Primary_water_source)) + geom_point()
# model
DB <-DR_data(spread_bm_envi_dat[, 2:4])
plot(DB)
m6b <- DirichReg(DB ~ Primary_water_source, spread_bm_envi_dat, model = "common")
summary(m6b)
